#$preamble
# A simple hand-made makefile for a package including applications
# built from Fortran 90 sources, taking into account the usual
# dependency cases.

# This makefile works with the GNU make command, the one find on
# GNU/Linux systems and often called gmake on non-GNU systems, if you
# are using an old style make command, please see the file
# Makefile_oldstyle provided with the package.

# ======================================================================
# Let's start with the declarations
# ======================================================================
export LD_LIBRARY_PATH /nasa/intel/Compiler/2018.3.222/compilers_and_libraries_2018.3.222/linux/compiler/lib/intel64:/nasa/intel/Compiler/2018.3.222/compilers_and_libraries_2018.3.222/linux/compiler/lib/intel64_lin:/nasa/intel/Compiler/2018.3.222/compilers_and_libraries_2018.3.222/linux/ipp/lib/intel64:/nasa/intel/Compiler/2018.3.222/compilers_and_libraries_2018.3.222/linux/compiler/lib/intel64_lin:/nasa/intel/Compiler/2018.3.222/compilers_and_libraries_2018.3.222/linux/mkl/lib/intel64_lin:/nasa/intel/Compiler/2018.3.222/compilers_and_libraries_2018.3.222/linux/tbb/lib/intel64/gcc4.1:/nasa/intel/Compiler/2018.3.222/compilers_and_libraries_2018.3.222/linux/tbb/lib/intel64/gcc4.1:/nasa/intel/Compiler/2018.3.222/debugger_2018//libipt/intel64/lib:/nasa/intel/Compiler/2018.3.222/compilers_and_libraries_2018.3.222/linux/daal/lib/intel64_lin:/nasa/hpe/mpt/2.17r13/lib


# The compiler
#FC = gfortran
 FC = ifort
# flags for debugging or for maximum performance, comment as necessary

# Debug version
#FCFLAGS =  -g -fbounds-check -fbacktrace -Og  -fdefault-real-8 -fdefault-double-8 -frecord-marker=4
#F77FLAGS = -frecord-marker=4 -g -Og -fbounds-check -fbacktrace -std=legacy -fdefault-double-8 -fdefault-real-8  


# Run version
#FCFLAGS = -O3 -fPIC -m64
#F77FLAGS = -O3 -fPIC -fdefault-real-8 -std=legacy -m64

# Intel compiler version
 FCFLAGS = -O3 -fPIC -axCORE-AVX2 -heap-arrays -fp-model consistent
 F77FLAGS = -O3 -fPIC -axCORE-AVX2 -autodouble -heap-arrays -fp-model consistent

# intel debug version

# FCFLAGS = -O0 -traceback -CB -fPIC -axCORE-AVX2
# F77FLAGS = -O0 -traceback -CB -fPIC -axCORE-AVX2 -autodouble


# F77FLAGS =  -ffixed-line-length-132 -fdefault-double-8 -fdefault-real-8 -g -Og -fbounds-check -fbacktrace

# flags forall (e.g. look for system .mod files, required in gfortran)
FCFLAGS += -I/usr/include
F77FLAGS += -I/usr/include
#F7FLAGS += -I/usr/include

# libraries needed for linking, unused in the examples
LDFLAGS = -L/usr/local/lib/

# List of executables to be built within the package
#PROGRAMS = forward

# "make" builds all
all: $(PROGRAMS)

#  build the main to an executable program
#shiner: main.o

# some dependencies

# some dependencies
common_arrays_mod.o: sizes_mod.o define_types_mod.o
define_types_mod.o: sizes_mod.o 
atmos_ops_mod.o: sizes_mod.o common_arrays_mod.o phys_const_mod.o define_types_mod.o
gas_opacity_mod.o: sizes_mod.o  common_arrays_mod.o phys_const_mod.o define_types_mod.o atmos_ops_mod.o tristan.o
clouds_mod.o: sizes_mod.o common_arrays_mod.o define_types_mod.o phys_const_mod.o  
setup_RT_mod.o:sizes_mod.o common_arrays_mod.o define_types_mod.o phys_const_mod.o atmos_ops_mod.o bits_for_disort_f77.o DISORT.o dsolver.o gfluxi.o 

main_mod.o: sizes_mod.o common_arrays_mod.o define_types_mod.o phys_const_mod.o atmos_ops_mod.o tristan.o gas_opacity_mod.o clouds_mod.o RDI1MACH.o LINPAK.o ErrPack.o BDREF.o bits_for_disort_f77.o DISORT.o dtridgl.o dsolver.o gfluxi.o setup_RT_mod.o 

marv.o: sizes_mod.o  define_types_mod.o common_arrays_mod.o phys_const_mod.o atmos_ops_mod.o tristan.o gas_opacity_mod.o clouds_mod.o RDI1MACH.o LINPAK.o ErrPack.o BDREF.o bits_for_disort_f77.o DISORT.o dtridgl.o dsolver.o gfluxi.o  setup_RT_mod.o  main_mod.o





# ======================================================================
# And now the general rules, these should not require modification
# ======================================================================

# General rule for building prog from prog.o; $^ (GNU extension) is
# used in order to list additional object files on which the
# executable depends
%: %.o
	$(FC) $(FCFLAGS) -o $@ $^ $(LDFLAGS)

# General rules for building prog.o from prog.f90 or prog.F90; $< is
# used in order to list only the first prerequisite (the source file)
# and not the additional prerequisites such as module or include files
%.o: %.f90
	$(FC) $(FCFLAGS) -c $<

# Some rules for building f77
%.o: %.f
	$(FC) $(F77FLAGS) -c $<

f90mods:
	$(FC) $(FCFLAGS) -c f90wrap_*.f90

f77mods:
	$(FC) $(F77FLAGS) -c *.f

# now for python wrap
f90wrap:
	f90wrap -m forwardmodel *.f90


libfile:
#	$(FC) -fPIC -shared -O3 -m64 *.o -o libmarvin.so
	$(FC) -fPIC -shared -O3 -axCORE-AVX2 *.o -o libmarvin.so

pysig:
	f2py -m forwardmodel -h forwardmodel.pyf sizes_mod.f90 marv.f90

pymod:
#	f2py --fcompiler=gfortran --f90flags="-O3 -m64" -I/usr/include -L/usr/local/lib -c libmarvin.so forwardmodel.pyf marv.f90
	f2py --fcompiler=intelem --f90flags="-O3 -axCORE-AVX2" -I/usr/include -L/usr/local/lib -c libmarvin.so forwardmodel.pyf sizes_mod.f90 marv.f90

ciasig:
	f2py -m ciamod -h ciamod.pyf sizes_mod.f90 read_cia.f90

ciamod:
#	f2py --fcompiler=gfortran --f90flags="-O3 -m64" -I/usr/include -L/usr/local/lib -c ciamod.pyf read_cia.f90
	f2py --fcompiler=intelem --f90flags="-O3 -axCORE-AVX2" -I/usr/include -L/usr/local/lib -c ciamod.pyf sizes_mod.f90 read_cia.f90

cloudpostsig:
	f2py -m cloudpost -h cloudpost.pyf cloudpost.f90

cloudpost:
	f2py --fcompiler=gfortran --f90flags="-O2 -fPIC -frecord-marker=4 -fbounds-check " -I/usr/include -L/usr/local/lib -c cloudpost.pyf cloudpost.f90

bbconvsig:
	f2py -m bbconv -h bbconv.pyf bbconv.f90

bbconv:
	f2py --fcompiler=intelem --compiler=intelem --noopt --f90flags="-O3 -axCORE-AVX2" -I/usr/include -L/usr/local/lib -c bbconv.pyf bbconv.f90


tausig:
	f2py -m taumod -h taumod.pyf sizes_mod.f90 cloudtau.f90

taumod:
	f2py --fcompiler=gfortran --f90flags="-O3" -I/usr/include -L/usr/local/lib -c taumod.pyf sizes_mod.f90 cloudtau.f90

# Utility targets


.PHONY: clean 

clean:
	rm -f *.o *.mod *.MOD f90wrap*  *.pyc *.pyf *.so
